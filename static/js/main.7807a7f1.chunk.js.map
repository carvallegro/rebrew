{"version":3,"sources":["redux/feats/index.js","redux/actions.js","redux/spells/index.js","redux/createStore.js","redux/spells/selectors.js","redux/offline.js","redux/index.js","components/header/logo.svg","components/logo/styles.js","components/logo/index.js","components/header/styles.js","components/header/index.js","components/layout/styles.js","components/layout/index.js","components/HomepageLink/index.js","pages/Home/styles.js","pages/Home/index.js","pages/spell-list/connect.js","utils.js","spell-utils.js","components/spell-card/connect.js","components/spell-card/styles.js","components/spell-card/component.js","components/spell-card/index.js","clipboard.js","components/import-json-file/index.js","pages/spell-list/component.js","pages/spell-list/index.js","components/spell-fields/spell-casting-time.js","components/spell-fields/spell-components.js","components/spell-fields/spell-description.js","components/spell-fields/spell-duration.js","components/spell-fields/spell-name.js","components/spell-fields/spell-range.js","components/spell-fields/spell-school.js","components/spell-fields/spell-type.js","components/spell-form/component.js","components/spell-form/connect.js","components/spell-form/index.js","pages/create-spell/index.js","pages/edit-spell/connect.js","pages/edit-spell/index.js","pages/import/connect.js","pages/import/index.js","pages/import/component.js","App.js","serviceWorker.js","index.js"],"names":["featSlice","createSlice","name","initialState","srdFeats","reducers","restoreData","createAction","spellsSlice","srdSpells","saveSpell","state","payload","deleteSpell","R","importSpells","Object","keys","extraReducers","spells","actions","store","configureStore","reducer","combineReducers","feats","featsReducer","spellsReducer","selectAllSpellsIndexedByName","selectAllSpells","createSelector","values","selectAllSpellsWithoutSrd","selectAllSpellNames","selectSpellByName","spellName","localforage","config","driver","INDEXEDDB","LOCALSTORAGE","version","size","storeName","description","newVal","item","value","setItem","restoreDataFromStorage","a","getItem","setupStoreWatch","subscribe","watch","getState","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","props","enableBackground","height","id","viewBox","width","xmlSpace","ref","ForwardRef","forwardRef","Img","styled","LogoSVG","colors","gray","c20","Logo","defaultProps","HeaderWrapper","header","Header","navigationRef","useRef","useState","navigationOpen","setNavigationOpen","handleClick","innerRef","onClick","skin","icon","anchorRef","open","onClose","popperProps","placement","disabled","navigate","color","textDecoration","text","Wrapper","div","Column","Content","main","Layout","children","getStyle","padding","display","justifyContent","alignItems","opacity","cursor","HomepageLink","to","elevation","setElevation","style","onMouseEnter","onMouseLeave","component","fontSize","Home","level","gap","gapVertical","md","sm","xs","connect","formModes","CREATE","EDIT","spellLevels","label","spellSchools","spellComponents","V","M","S","SPELL_ATTRIBUTES","eqInsensitive","b","String","toLowerCase","generateSpellSchema","spellNames","mode","Yup","shape","trim","nullable","test","required","level_number","school","casting_time","range","duration","components","desc","actionCreators","onDelete","CardContent","Description","HeadingWrapper","paperStyle","MenuItemAlign","MenuItem","type","marginRight","SpellCard","srd","levelNumber","castingTime","menuRef","isOpen","setOpen","menuOpen","setMenuOpen","spell","hSpacing","fontStyle","current","focus","copy","JSON","stringify","hidden","split","map","redirectClipboardTo","v","preventDefault","data","clipboardData","getData","parse","invalidJson","readFile","e","result","ImportJsonFile","files","setFiles","useEffect","forEach","f","reader","FileReader","onload","readAsText","accept","onDropAccepted","formatResult","SpellList","spellGroups","wrap","displaySpell","index","lg","searchValue","updateSearch","includeSrd","setIncludeSrd","useMemo","filterByNameCaseInsensitive","onPaste","iconPosition","placeholder","onChange","stopPropagation","checked","flexGrow","kind","reduce","SpellCastingTime","SpellComponents","htmlFor","multiple","items","itemToString","itemIsEqual","filter","join","SpellDescription","SpellDuration","SpellName","SpellRange","SpellSchool","SpellType","FORM_INITIAL_VALUES","SpellIntroduction","SpellForm","allSpellNames","onSave","useFormik","initialValues","validationSchema","onSubmit","console","log","handleSubmit","errors","handleChange","setValues","setFieldValue","touched","setFieldTouched","error","onBlur","onFocus","rows","propType","PropTypes","oneOf","isRequired","object","arrayOf","string","func","CreateBreadcrumb","CreateSpellPage","vSpacing","maxWidth","EditBreadcrumb","location","isDataEmpty","normalizedData","Array","importSpellData","isValidJson","src","displayDataTypes","displayObjectSize","enableClipboard","iconStyle","indentWidth","theme","shouldCollapse","App","useStore","hasDataLoaded","setDataLoaded","loadErrored","setLoadErrored","then","dispatch","catch","useOfflineDataRestoration","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7807a7f1.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nimport srdFeats from './srd_feats'\n\nconst featSlice = createSlice({\n  name: 'feats',\n  initialState: srdFeats,\n  reducers: {}\n})\n\nexport default featSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const restoreData = createAction('restoreData')\n","import * as R from 'ramda'\nimport { createSlice } from '@reduxjs/toolkit'\n\nimport srdSpells from './srd_spells'\nimport { restoreData } from '../actions'\n\n/*\n JQ command to index spells by name:\n  jq 'INDEX(.name)' spells_file.json > srd_spells.json\n */\nconst spellsSlice = createSlice({\n  name: 'spells',\n  initialState: srdSpells,\n  reducers: {\n    saveSpell: (state, { payload }) => ({\n      ...state,\n      [payload.name]: payload\n    }),\n    deleteSpell: (state, { payload }) => R.omit([payload], state),\n    importSpells: (state, { payload = {} }) => ({\n      ...state,\n      ...R.omit(Object.keys(srdSpells))(payload)\n    })\n  },\n  extraReducers: {\n    [restoreData]: (state, { payload }) => ({\n      ...state,\n      ...payload.spells\n    })\n  }\n})\n\nexport default spellsSlice.reducer\n\nexport const { saveSpell, deleteSpell, importSpells } = spellsSlice.actions\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\n\nimport featsReducer from './feats'\nimport spellsReducer from './spells'\n\nconst store = configureStore({\n  reducer: combineReducers({\n    feats: featsReducer,\n    spells: spellsReducer\n  })\n})\n\nexport default store\n","import * as R from 'ramda'\nimport { createSelector } from '@reduxjs/toolkit'\n\nconst selectAllSpellsIndexedByName = R.pathOr([], ['spells'])\n\nexport const selectAllSpells = createSelector(\n  selectAllSpellsIndexedByName,\n  Object.values\n)\n\nexport const selectAllSpellsWithoutSrd = createSelector(\n  selectAllSpells,\n  R.pipe(R.reject(R.propEq('srd', true)), R.indexBy(R.prop('name')))\n)\n\nexport const selectAllSpellNames = createSelector(\n  selectAllSpellsIndexedByName,\n  Object.keys\n)\n\nexport const selectSpellByName = (state, { spellName }) =>\n  R.pathOr([], ['spells', spellName], state)\n","import localforage from 'localforage'\nimport { useStore } from 'react-redux'\nimport watch from 'redux-watch'\n\nimport { selectAllSpellsWithoutSrd } from './spells/selectors'\nimport { useEffect, useState } from 'react'\nimport { restoreData } from './actions'\n\nlocalforage.config({\n  driver: [localforage.INDEXEDDB, localforage.LOCALSTORAGE],\n  name: 'rebrew-bis',\n  version: 1.0,\n  size: 4980736,\n  storeName: 'rebrew_offline_store',\n  description: 'Store homebrew content for your Rebrew data.'\n})\n\nconst saveItem = (item, value) => localforage.setItem(item, value)\n\nconst getItem = item => localforage.getItem(item)\n\nconst saveSpell = newVal =>\n  saveItem('spells', selectAllSpellsWithoutSrd({ spells: newVal }))\n\nexport const setupStoreWatch = store => {\n  store.subscribe(watch(store.getState, 'spells')(saveSpell))\n  return store\n}\n\nexport const restoreDataFromStorage = async () => ({\n  spells: await getItem('spells')\n})\n\nexport const useOfflineDataRestoration = () => {\n  const store = useStore()\n  const [hasDataLoaded, setDataLoaded] = useState(false)\n  const [loadErrored, setLoadErrored] = useState(false)\n\n  useEffect(() => {\n    restoreDataFromStorage()\n      .then(data => {\n        store.dispatch(restoreData(data))\n        setDataLoaded(true)\n      })\n      .catch(() => setLoadErrored(true))\n  }, [store, setDataLoaded, setLoadErrored])\n\n  return { hasDataLoaded, loadErrored }\n}\n","import store from './createStore'\nimport { setupStoreWatch } from './offline'\n\nexport default setupStoreWatch(store)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M89.992,45H67.109L50,15.365L32.891,45H10.008v10h17.109L10.008,84.635h79.984L72.883,55h17.109V45z M50,35.365L55.563,45  H44.438L50,35.365z M72.672,74.635H27.328L38.664,55h22.672L72.672,74.635z\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 100 100\",\n    height: \"100px\",\n    id: \"air\",\n    viewBox: \"0 0 100 100\",\n    width: \"100px\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.d5fbfa90.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled'\nimport { colors } from 'bold-ui'\n\nimport { ReactComponent as LogoSVG } from '../header/logo.svg'\n\nexport const Img = styled(LogoSVG)`\n  fill: ${colors.gray.c20};\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Img } from './styles'\n\nconst Logo = ({ height, width }) => <Img height={height} width={width} />\n\nLogo.propTypes = {\n  height: PropTypes.string,\n  width: PropTypes.string\n}\n\nLogo.defaultProps = {\n  height: '42px',\n  width: '45px'\n}\n\nexport default Logo\n","import styled from '@emotion/styled'\n\nexport const HeaderWrapper = styled.header`\n  padding: 16px 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useRef, useState } from 'react'\nimport { Button, Dropdown, DropdownItem, Icon, Link, Tooltip } from 'bold-ui'\n\nimport Logo from '../logo'\n\nimport { HeaderWrapper } from './styles'\nimport { navigate } from '@reach/router'\n\nconst Header = () => {\n  const navigationRef = useRef()\n  const [navigationOpen, setNavigationOpen] = useState(false)\n  const handleClick = () => setNavigationOpen(true)\n  const handleClose = () => setNavigationOpen(false)\n\n  return (\n    <HeaderWrapper>\n      <Button\n        innerRef={navigationRef}\n        onClick={handleClick}\n        skin=\"ghost\"\n        size=\"small\"\n      >\n        <Icon icon=\"hamburguerMenu\" />\n      </Button>\n      <Dropdown\n        anchorRef={navigationRef}\n        open={navigationOpen}\n        onClose={handleClose}\n        popperProps={{ placement: 'bottom-start' }}\n      >\n        <DropdownItem disabled>Races</DropdownItem>\n        <DropdownItem disabled>Classes</DropdownItem>\n        <DropdownItem disabled>Subclasses</DropdownItem>\n        <DropdownItem disabled>Backgrounds</DropdownItem>\n        <DropdownItem disabled>Feats</DropdownItem>\n        <DropdownItem onClick={() => navigate('/spells')}>Spells</DropdownItem>\n      </Dropdown>\n\n      <Link color=\"inherit\" textDecoration=\"none\" onClick={() => navigate('/')}>\n        <Logo title=\"Rebrew logo\" />\n      </Link>\n\n      <Tooltip text=\"Upload content\" placement=\"bottom-end\">\n        <Button onClick={handleClick} skin=\"ghost\" size=\"small\" disabled>\n          <Icon icon=\"upload\" />\n        </Button>\n      </Tooltip>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const Column = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  height: 100%;\n`\n\nexport const Content = styled.main`\n  width: 100%;\n  min-height: 100%;\n`\n","import React from 'react'\nimport Header from '../header'\nimport { Column, Content, Wrapper } from './styles'\n\nconst Layout = ({ children }) => (\n  <Wrapper>\n    <Column>\n      <Header />\n      <Content>{children}</Content>\n    </Column>\n  </Wrapper>\n)\n\nexport default Layout\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { navigate } from '@reach/router'\nimport { Icon, Paper, Text } from 'bold-ui'\n\nconst getStyle = disabled => ({\n  padding: '6px 16px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  opacity: disabled ? '50%' : 'inherit',\n  cursor: disabled ? 'inherit' : 'pointer'\n})\n\nconst HomepageLink = ({ text, to, disabled }) => {\n  const [elevation, setElevation] = useState(0)\n  return (\n    <Paper\n      style={getStyle(disabled)}\n      onClick={() => !disabled && navigate(to)}\n      elevation={elevation}\n      onMouseEnter={() => !disabled && setElevation(10)}\n      onMouseLeave={() => !disabled && setElevation(0)}\n    >\n      <Text component=\"p\" fontSize={1.25}>\n        {text}\n      </Text>\n      <Icon icon=\"arrowRight\" />\n    </Paper>\n  )\n}\n\nHomepageLink.propTypes = {\n  HomepageLink: PropTypes.string,\n  to: PropTypes.string,\n  disabled: PropTypes.bool\n}\n\nexport default HomepageLink\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  & > * {\n    margin: 1rem 0;\n  }\n`\n","import React from 'react'\nimport { Cell, Grid, Heading, Text } from 'bold-ui'\n\nimport Logo from '../../components/logo'\nimport HomepageLink from '../../components/HomepageLink'\n\nimport { Wrapper } from './styles'\n\nconst Home = () => (\n  <Wrapper>\n    <Logo height=\"80px\" width=\"80px\" />\n    <Heading level={1} fontSize={2}>\n      REBREW\n    </Heading>\n    <Text component=\"p\" fontSize={1}>\n      Welcome to Rebrew, an easy to use interface to generate homebrew content\n      for Reroll.\n    </Text>\n    <Grid gap={2} gapVertical={1}>\n      <Cell md={4} sm={6} xs={12}>\n        <HomepageLink disabled text=\"Classes (coming soon)\" to=\"classes\" />\n      </Cell>\n      <Cell md={4} sm={6} xs={12}>\n        <HomepageLink\n          disabled\n          text=\"Subclasses (coming soon)\"\n          to=\"subclasses\"\n        />\n      </Cell>\n      <Cell md={4} sm={6} xs={12}>\n        <HomepageLink disabled text=\"Races (coming soon)\" to=\"races\" />\n      </Cell>\n      <Cell md={4} sm={6} xs={12}>\n        <HomepageLink\n          disabled\n          text=\"Backgrounds (coming soon)\"\n          to=\"backgrounds\"\n        />\n      </Cell>\n      <Cell md={4} sm={6} xs={12}>\n        <HomepageLink disabled text=\"Feats (coming soon)\" to=\"feats\" />\n      </Cell>\n      <Cell md={4} sm={6} xs={12}>\n        <HomepageLink text=\"Spells\" to=\"spells\" />\n      </Cell>\n    </Grid>\n  </Wrapper>\n)\n\nexport default Home\n","import { connect } from 'react-redux'\nimport { selectAllSpells } from '../../redux/spells/selectors'\n\nconst mapStateToProps = state => ({\n  spells: selectAllSpells(state)\n})\n\nexport default connect(mapStateToProps)\n","export const formModes = {\n  CREATE: 'create',\n  EDIT: 'edit'\n}\n","import * as R from 'ramda'\nimport * as Yup from 'yup'\nimport { formModes } from './utils'\n\nexport const spellLevels = [\n  {\n    value: 0,\n    label: 'Cantrip'\n  },\n  {\n    value: 1,\n    label: '1st level'\n  },\n  {\n    value: 2,\n    label: '2nd level'\n  },\n  {\n    value: 3,\n    label: '3rd level'\n  },\n  {\n    value: 4,\n    label: '4th level'\n  },\n  {\n    value: 5,\n    label: '5th level'\n  },\n  {\n    value: 6,\n    label: '6th level'\n  },\n  {\n    value: 7,\n    label: '7th level'\n  },\n  {\n    value: 8,\n    label: '8th level'\n  },\n  {\n    value: 9,\n    label: '9th level'\n  }\n]\n\nexport const spellSchools = [\n  'Abjuration',\n  'Conjuration',\n  'Divination',\n  'Enchantment',\n  'Evocation',\n  'Illusion',\n  'Necromancy',\n  'Transmutation'\n]\n\nexport const spellComponents = {\n  V: {\n    value: 'V',\n    label: 'Verbal (V)'\n  },\n  M: {\n    value: 'M',\n    label: 'Material (M)'\n  },\n  S: {\n    value: 'S',\n    label: 'Somatic (S)'\n  }\n}\n\nexport const SPELL_ATTRIBUTES = [\n  'name',\n  'srd',\n  'type',\n  'level_number',\n  'school',\n  'casting_time',\n  'range',\n  'components',\n  'duration',\n  'desc'\n]\n\nconst eqInsensitive = R.curry(\n  (a, b) => String(a).toLowerCase() === String(b).toLowerCase()\n)\n\nexport const generateSpellSchema = (spellNames, mode) =>\n  Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .nullable()\n      .test(\n        'notAnExistingSpellNameTest',\n        'There is already a spell with that name',\n        value =>\n          mode === formModes.EDIT || !R.find(eqInsensitive(value), spellNames)\n      )\n      .required('You must enter a name'),\n    level_number: Yup.string()\n      .nullable()\n      .trim()\n      .required('You must select a spell type'),\n    school: Yup.string()\n      .nullable()\n      .trim()\n      .required('You must select a school of magic'),\n    casting_time: Yup.string()\n      .trim()\n      .required('You must enter a casting time'),\n    range: Yup.string()\n      .trim()\n      .required('You must enter a range'),\n    duration: Yup.string()\n      .trim()\n      .required('You must enter a duration'),\n    components: Yup.string()\n      .trim()\n      .required('You must select at least one component'),\n    desc: Yup.string()\n      .trim()\n      .required('You must enter a description')\n  })\n","import { connect } from 'react-redux'\nimport { deleteSpell } from '../../redux/spells'\n\nconst actionCreators = {\n  onDelete: deleteSpell\n}\n\nexport default connect(null, actionCreators)\n","import styled from '@emotion/styled'\n\nexport const CardContent = styled.div`\n  margin: 8px 0;\n`\n\nexport const Description = styled.div`\n  max-height: 200px;\n  overflow: scroll;\n\n  & > p {\n    margin-bottom: 8px;\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n`\n\nexport const HeadingWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  cursor: pointer;\n`\n","import * as R from 'ramda'\nimport copy from 'clipboard-copy'\n\nimport React, { Fragment, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { navigate } from '@reach/router'\nimport styled from '@emotion/styled'\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  HFlow,\n  Icon,\n  Paper,\n  Tag,\n  Text,\n  VFlow\n} from 'bold-ui'\n\nimport { spellLevels } from '../../spell-utils'\n\nimport { CardContent, Description, HeadingWrapper } from './styles'\n\nconst paperStyle = {\n  padding: '.5rem 1rem'\n}\n\nconst MenuItemAlign = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst MenuItem = ({ icon, text, type, onClick }) => (\n  <DropdownItem type={type} onClick={onClick}>\n    <MenuItemAlign>\n      <Icon size={1.2} icon={icon} style={{ marginRight: '0.2rem' }} />\n      {text}\n    </MenuItemAlign>\n  </DropdownItem>\n)\n\nconst SpellCard = ({\n  spellName,\n  srd,\n  levelNumber,\n  school,\n  castingTime,\n  range,\n  components,\n  duration,\n  desc,\n  onDelete,\n  ...props\n}) => {\n  const menuRef = useRef()\n  const [isOpen, setOpen] = useState(false)\n\n  const [menuOpen, setMenuOpen] = useState(false)\n  const handleClick = () => setMenuOpen(true)\n  const handleClose = () => {\n    setMenuOpen(false)\n    menuRef.current.focus()\n  }\n\n  const spell = {\n    spellName,\n    srd,\n    levelNumber,\n    school,\n    castingTime,\n    range,\n    components,\n    duration,\n    desc\n  }\n  return (\n    <Paper style={paperStyle} onClick={() => setOpen(!isOpen)} {...props}>\n      <HeadingWrapper>\n        <HFlow alignItems=\"center\" hSpacing={0.5} justifyContent=\"flex-start\">\n          <Button skin=\"ghost\" size=\"small\" onClick={() => setOpen(!isOpen)}>\n            {!isOpen && <Icon icon=\"angleDown\" />}\n            {isOpen && <Icon icon=\"angleUp\" />}\n          </Button>\n\n          <Text fontSize={1} fontStyle=\"bold\">\n            {spellName}\n          </Text>\n          {srd && <Tag type=\"normal\">SRD</Tag>}\n        </HFlow>\n        {!srd && (\n          <Fragment>\n            <Button\n              innerRef={menuRef}\n              size=\"small\"\n              skin=\"ghost\"\n              onClick={handleClick}\n            >\n              <Icon icon=\"dots\" />\n            </Button>\n            <Dropdown\n              anchorRef={menuRef}\n              open={menuOpen}\n              onClose={handleClose}\n              popperProps={{ placement: 'bottom-end' }}\n            >\n              <MenuItem\n                icon=\"penOutline\"\n                text=\"Edit\"\n                onClick={() => navigate(`spells/edit/${spellName}`)}\n              />\n              <MenuItem\n                icon=\"copyOutline\"\n                text=\"Copy to clipboard\"\n                onClick={() => copy(JSON.stringify(spell))}\n              />\n              <MenuItem\n                icon=\"trashOutline\"\n                text=\"Delete\"\n                type=\"danger\"\n                onClick={() => onDelete(spellName)}\n              />\n            </Dropdown>\n          </Fragment>\n        )}\n      </HeadingWrapper>\n      <CardContent\n        alignItems=\"center\"\n        hSpacing={0.25}\n        justifyContent=\"flex-start\"\n        hidden={!isOpen}\n      >\n        <VFlow>\n          <Text component=\"p\" fontSize={1} fontStyle=\"italic\">\n            {spellLevels[levelNumber].label} {school}\n          </Text>\n          <div>\n            <Text component=\"p\" fontSize={1}>\n              <b>Casting time:</b> {castingTime}\n            </Text>\n            <Text component=\"p\" fontSize={1}>\n              <b>Range:</b> {range}\n            </Text>\n            <Text component=\"p\" fontSize={1}>\n              <b>Components:</b> {components}\n            </Text>\n            <Text component=\"p\" fontSize={1}>\n              <b>Duration:</b> {duration}\n            </Text>\n          </div>\n          <Description>\n            {desc.split('\\n').map((text, i) => (\n              <Text key={i} component=\"p\" fontSize={1}>\n                {text}\n              </Text>\n            ))}\n          </Description>\n        </VFlow>\n      </CardContent>\n    </Paper>\n  )\n}\n\nSpellCard.propTypes = {\n  spellName: PropTypes.string,\n  srd: PropTypes.bool,\n  levelNumber: PropTypes.number,\n  school: PropTypes.string,\n  castingTime: PropTypes.string,\n  range: PropTypes.string,\n  components: PropTypes.string,\n  duration: PropTypes.string,\n  desc: PropTypes.string,\n  onDelete: PropTypes.func\n}\n\nSpellCard.defaultProps = {\n  onDelete: R.identity\n}\n\nexport default SpellCard\n","import connect from './connect'\nimport SpellCard from './component'\n\nexport default connect(SpellCard)\n","import { navigate } from '@reach/router'\n\nexport const redirectClipboardTo = to => v => {\n  v.preventDefault()\n  const data = v.clipboardData.getData('Text')\n  try {\n    navigate(to, { state: { data: JSON.parse(data) } })\n  } catch {\n    navigate(to, { state: { invalidJson: true } })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { FileUploader } from 'bold-ui'\nimport { navigate } from '@reach/router'\n\nconst readFile = e => {\n  try {\n    navigate('spells/import', { state: { data: JSON.parse(e.target.result) } })\n  } catch {\n    navigate('spells/import', { state: { invalidJson: true } })\n  }\n}\n\nconst ImportJsonFile = () => {\n  const [files, setFiles] = useState([])\n\n  useEffect(() => {\n    files.forEach(f => {\n      const reader = new FileReader()\n      reader.onload = readFile\n      reader.readAsText(f)\n    })\n  }, [files])\n\n  return (\n    <FileUploader\n      accept=\"application/json\"\n      text=\"Click or drop file here\"\n      onDropAccepted={setFiles}\n    />\n  )\n}\n\nexport default ImportJsonFile\n","import * as R from 'ramda'\nimport copy from 'clipboard-copy'\n\nimport React, { useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { navigate } from '@reach/router'\nimport {\n  Button,\n  ButtonGroup,\n  Cell,\n  Checkbox,\n  Grid,\n  Heading,\n  Icon,\n  Text,\n  TextField,\n  Tooltip,\n  VFlow\n} from 'bold-ui'\n\nimport { spellLevels } from '../../spell-utils'\nimport SpellCard from '../../components/spell-card'\nimport { redirectClipboardTo } from '../../clipboard'\nimport ImportJsonFile from '../../components/import-json-file'\n\nconst formatResult = R.pipe(\n  R.sortBy(R.prop('name')),\n  R.groupBy(R.prop('level_number'))\n)\n\nconst filterByNameCaseInsensitive = searchValue =>\n  R.filter(spell =>\n    R.includes(searchValue.trim().toLowerCase())(spell.name.toLowerCase())\n  )\n\nexport const SpellListPage = ({ spells = [] }) => {\n  const [searchValue, updateSearch] = useState('')\n  const [includeSrd, setIncludeSrd] = useState(true)\n\n  const spellGroups = useMemo(() => {\n    if (searchValue.length && searchValue.length < 3) {\n      return formatResult(spells)\n    }\n\n    return R.pipe(\n      R.reject(spell => spell.srd && !includeSrd),\n      filterByNameCaseInsensitive(searchValue),\n      formatResult\n    )(spells)\n  }, [searchValue, includeSrd, spells])\n\n  return (\n    <VFlow onPaste={redirectClipboardTo('spells/import')}>\n      <Heading level={1}>Spells</Heading>\n\n      <Text component=\"p\" fontSize={1}>\n        To import spells, use the file loader below or paste your JSON data in\n        this page.\n      </Text>\n\n      <ImportJsonFile />\n\n      <Grid gap={0.5} alignItems=\"center\">\n        <Cell lg={3} md={3} sm={4} xs={12}>\n          <TextField\n            icon=\"zoomOutline\"\n            iconPosition=\"left\"\n            name=\"search-spell-by-name\"\n            placeholder=\"Type spell name\"\n            value={searchValue}\n            onChange={e => updateSearch(e.target.value)}\n            onPaste={e => {\n              e.stopPropagation()\n              updateSearch(e.target.value)\n            }}\n          />\n        </Cell>\n\n        <Cell lg={2} md={3} sm={4} xs={12}>\n          <Checkbox\n            label=\"Include SRD content\"\n            name=\"include-srd\"\n            checked={includeSrd}\n            onChange={() => setIncludeSrd(!includeSrd)}\n          />\n        </Cell>\n\n        <Cell flexGrow={1} />\n\n        <Cell>\n          <ButtonGroup>\n            <Tooltip text=\"Copy to clipboard\" placement=\"bottom-end\">\n              <Button\n                kind=\"normal\"\n                skin=\"outline\"\n                size=\"medium\"\n                style={{ padding: 'calc(0.75rem - 1px)' }}\n                onClick={() =>\n                  copy(\n                    JSON.stringify(Object.values(spellGroups).reduce(R.concat))\n                  )\n                }\n              >\n                <Icon icon=\"copyOutline\" />\n              </Button>\n            </Tooltip>\n            <Button\n              kind=\"primary\"\n              skin=\"default\"\n              size=\"medium\"\n              style={{ padding: 'calc(0.75rem - 1px) 2rem' }}\n              onClick={() => navigate('spells/create')}\n            >\n              <Icon icon=\"plus\" style={{ marginRight: '0.2rem' }} />\n              Add\n            </Button>\n          </ButtonGroup>\n        </Cell>\n      </Grid>\n\n      <SpellList spellGroups={spellGroups} />\n    </VFlow>\n  )\n}\n\nSpellListPage.propTypes = {\n  spells: PropTypes.array.isRequired\n}\n\nconst SpellList = ({ spellGroups }) => (\n  <Grid gap={2} gapVertical={1} wrap>\n    {Object.keys(spellGroups).length === 0 && (\n      <Cell xs={12}>\n        <Heading level={3}>\n          <i>No result</i>\n        </Heading>\n      </Cell>\n    )}\n    {R.pipe(\n      R.mapObjIndexed((spell, key) => [\n        <Cell key={key} xs={12}>\n          <Heading level={2}>{spellLevels[key].label}</Heading>\n        </Cell>,\n        spell.map(displaySpell)\n      ]),\n      Object.values\n    )(spellGroups)}\n  </Grid>\n)\n\nconst displaySpell = (spell, index) => (\n  <Cell key={index} lg={3} md={4} sm={6} xs={12}>\n    <SpellCard\n      spellName={spell.name}\n      srd={spell.srd}\n      levelNumber={spell.level_number}\n      school={spell.school}\n      castingTime={spell.casting_time}\n      range={spell.range}\n      components={spell.components}\n      duration={spell.duration}\n      desc={spell.desc}\n    />\n  </Cell>\n)\n","import connect from './connect'\nimport { SpellListPage } from './component'\n\nexport default connect(SpellListPage)\n","import React from 'react'\nimport { TextField } from 'bold-ui'\n\nexport const SpellCastingTime = ({ value, ...props }) => (\n  <TextField\n    id=\"casting_time\"\n    name=\"casting_time\"\n    required\n    label=\"Casting time\"\n    placeholder=\"Reaction, 1 action...\"\n    value={value}\n    {...props}\n  />\n)\n\nexport default SpellCastingTime\n","import * as R from 'ramda'\nimport React from 'react'\nimport { FormControl, Select } from 'bold-ui'\n\nimport { spellComponents } from '../../spell-utils'\n\nexport const SpellComponents = ({ value = '', onChange, ...props }) => (\n  <FormControl label=\"Components\" required htmlFor=\"spellComponents\">\n    <Select\n      id=\"components\"\n      name=\"components\"\n      multiple\n      required\n      placeholder=\"Choose amongst V, M and S\"\n      items={Object.values(spellComponents)}\n      itemToString={R.prop('label')}\n      itemIsEqual={(a, b) => a.value === b.value}\n      value={value\n        .split(',')\n        .map(v => spellComponents[v])\n        .filter(R.pipe(R.isNil, R.not))}\n      onChange={v => onChange(v.map(R.prop('value')).join())}\n      {...props}\n    />\n  </FormControl>\n)\n\nexport default SpellComponents\n","import { TextArea } from 'bold-ui'\nimport React from 'react'\n\nexport const SpellDescription = ({ value, ...props }) => (\n  <TextArea\n    id=\"desc\"\n    name=\"desc\"\n    label=\"Description\"\n    required\n    placeholder=\"Enter the description\"\n    value={value}\n    {...props}\n  />\n)\n\nexport default SpellDescription\n","import React from 'react'\nimport { TextField } from 'bold-ui'\n\nexport const SpellDuration = ({ value, ...props }) => (\n  <TextField\n    required\n    id=\"duration\"\n    name=\"duration\"\n    label=\"Duration\"\n    placeholder=\"Instaneous, 1 minute, 1 hour...\"\n    value={value}\n    {...props}\n  />\n)\n\nexport default SpellDuration\n","import React from 'react'\nimport { TextField } from 'bold-ui'\n\nexport const SpellName = props => (\n  <TextField\n    required\n    id=\"name\"\n    name=\"name\"\n    label=\"Name\"\n    placeholder=\"Enter the spell name\"\n    {...props}\n  />\n)\n\nexport default SpellName\n","import React from 'react'\nimport { TextField } from 'bold-ui'\n\nexport const SpellRange = ({ value, ...props }) => (\n  <TextField\n    required\n    id=\"range\"\n    name=\"range\"\n    label=\"Range\"\n    placeholder=\"Self, 30 feet, 120 feet...\"\n    value={value}\n    {...props}\n  />\n)\n\nexport default SpellRange\n","import * as R from 'ramda'\nimport React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { FormControl, Select } from 'bold-ui'\n\nimport { spellSchools } from '../../spell-utils'\n\nexport const SpellSchool = ({ value, ...props }) => {\n  return (\n    <FormControl label=\"School\" htmlFor=\"school\" required>\n      <Select\n        required\n        id=\"school\"\n        name=\"school\"\n        placeholder=\"Divination, Abjuration, Necromancy...\"\n        items={spellSchools}\n        itemToString={R.identity}\n        value={value}\n        {...props}\n      />\n    </FormControl>\n  )\n}\n\nSpellSchool.propTypes = {\n  value: PropTypes.string\n}\n\nexport default SpellSchool\n","import * as R from 'ramda'\nimport React from 'react'\nimport { FormControl, Select } from 'bold-ui'\n\nimport { spellLevels } from '../../spell-utils'\n\nexport const SpellType = ({ value, ...props }) => (\n  <FormControl label=\"Type\" htmlFor=\"level_number\" required>\n    <Select\n      id=\"level_number\"\n      name=\"level_number\"\n      placeholder=\"Cantrip, 1st level...\"\n      required\n      items={spellLevels}\n      itemToString={R.prop('label')}\n      value={spellLevels[value]}\n      {...props}\n    />\n  </FormControl>\n)\n\nexport default SpellType\n","import * as R from 'ramda'\nimport React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { navigate } from '@reach/router'\nimport { useFormik } from 'formik'\n\nimport { Button, Cell, Grid, HFlow, Text } from 'bold-ui'\n\nimport {\n  SpellCastingTime,\n  SpellComponents,\n  SpellDescription,\n  SpellDuration,\n  SpellName,\n  SpellRange,\n  SpellSchool,\n  SpellType\n} from '../spell-fields'\nimport { generateSpellSchema } from '../../spell-utils'\nimport { formModes } from '../../utils'\n\nconst FORM_INITIAL_VALUES = {\n  name: '',\n  srd: false,\n  level_number: '',\n  school: '',\n  casting_time: '',\n  range: '',\n  duration: '',\n  components: '',\n  desc: ''\n}\n\nexport const SpellIntroduction = () => (\n  <Fragment>\n    <Text component=\"p\" fontSize={1}>\n      A spell is a discrete magical effect, a single shaping of the magical\n      energies that suffuse the multiverse into a specific, limited expression.\n      In casting a spell, a character carefully plucks at the invisible strands\n      of raw magic suffusing the world, pins them in place in a particular\n      pattern, sets them vibrating in a specific way, and then releases them to\n      unleash the desired effect—in most cases, all in the span of seconds.\n    </Text>\n    <Text component=\"p\" fontSize={1}>\n      Spells can be versatile tools, weapons, or protective wards. They can deal\n      damage or undo it, impose or remove conditions, drain life energy away,\n      and restore life to the dead.\n    </Text>\n  </Fragment>\n)\n\nconst SpellForm = ({\n  mode,\n  spell = FORM_INITIAL_VALUES,\n  allSpellNames = [],\n  onSave\n}) => {\n  const {\n    handleSubmit,\n    errors,\n    handleChange,\n    values,\n    setValues,\n    setFieldValue,\n    touched,\n    setFieldTouched\n  } = useFormik({\n    initialValues: FORM_INITIAL_VALUES,\n    validationSchema: generateSpellSchema(allSpellNames, mode),\n    onSubmit: value => {\n      console.log(JSON.stringify(onSave))\n      onSave(value)\n      return navigate('/spells')\n    }\n  })\n\n  useEffect(() => {\n    setValues(spell)\n  }, [spell, setValues])\n\n  return (\n    <Grid gap={2} gapVertical={1}>\n      <Cell sm={8} xs={12}>\n        <SpellName\n          value={values.name}\n          error={errors.name && touched.name && errors.name}\n          disabled={mode === formModes.EDIT}\n          onBlur={() => setFieldTouched('name')}\n          onChange={handleChange}\n        />\n      </Cell>\n\n      <Cell sm={5} xs={12}>\n        <SpellType\n          value={values.level_number}\n          error={\n            errors.level_number && touched.level_number && errors.level_number\n          }\n          onChange={v => setFieldValue('level_number', v ? v.value : null)}\n          onBlur={() => setFieldTouched('level_number')}\n        />\n      </Cell>\n\n      <Cell sm={7} xs={12}>\n        <SpellSchool\n          value={values.school}\n          error={errors.school && touched.school && errors.school}\n          onChange={v => setFieldValue('school', v)}\n          onBlur={() => setFieldTouched('school')}\n        />\n      </Cell>\n\n      <Cell sm={4} xs={12}>\n        <SpellCastingTime\n          value={values.casting_time}\n          error={\n            errors.casting_time && touched.casting_time && errors.casting_time\n          }\n          onChange={handleChange}\n          onBlur={() => setFieldTouched('casting_time')}\n        />\n      </Cell>\n\n      <Cell sm={4} xs={12}>\n        <SpellRange\n          value={values.range}\n          error={errors.range && touched.range && errors.range}\n          onChange={handleChange}\n          onBlur={() => setFieldTouched('range')}\n        />\n      </Cell>\n\n      <Cell sm={4} xs={12}>\n        <SpellDuration\n          value={values.duration}\n          error={errors.duration && touched.duration && errors.duration}\n          onChange={handleChange}\n          onBlur={() => setFieldTouched('duration')}\n        />\n      </Cell>\n\n      <Cell sm={8} xs={12}>\n        <SpellComponents\n          value={values.components}\n          error={errors.components && touched.components && errors.components}\n          onChange={v => setFieldValue('components', v)}\n          onBlur={() => setFieldTouched('components')}\n          onFocus={R.identity}\n        />\n      </Cell>\n\n      <Cell xs={12}>\n        <SpellDescription\n          rows={6}\n          value={values.desc}\n          error={errors.desc && touched.desc && errors.desc}\n          onChange={handleChange}\n          onBlur={() => setFieldTouched('desc')}\n        />\n      </Cell>\n\n      <Cell xs={12}>\n        <HFlow justifyContent=\"flex-end\">\n          <Button\n            kind=\"normal\"\n            skin=\"outline\"\n            size=\"medium\"\n            onClick={() => navigate('/spells')}\n          >\n            Cancel\n          </Button>\n          <Button\n            kind=\"primary\"\n            skin=\"default\"\n            size=\"medium\"\n            onClick={handleSubmit}\n          >\n            {mode === formModes.CREATE && 'Create'}\n            {mode === formModes.EDIT && 'Save'}\n          </Button>\n        </HFlow>\n      </Cell>\n    </Grid>\n  )\n}\n\nSpellForm.propType = {\n  mode: PropTypes.oneOf(Object.values(formModes)).isRequired,\n  spell: PropTypes.object,\n  allSpellNames: PropTypes.arrayOf(PropTypes.string),\n  onSave: PropTypes.func.isRequired\n}\n\nexport default SpellForm\n","import { connect } from 'react-redux'\nimport { saveSpell } from '../../redux/spells'\nimport { selectAllSpellNames } from '../../redux/spells/selectors'\n\nconst mapStateToProps = state => ({\n  allSpellNames: selectAllSpellNames(state)\n})\n\nconst actionCreators = {\n  onSave: saveSpell,\n  saveSpell\n}\n\nexport default connect(mapStateToProps, actionCreators)\n","import SpellForm from './component'\nimport connect from './connect'\n\nexport default connect(SpellForm)\n","import React from 'react'\nimport { navigate } from '@reach/router'\nimport { Breadcrumbs, Link, VFlow } from 'bold-ui'\n\nimport { SpellIntroduction } from '../../components/spell-form/component'\nimport SpellForm from '../../components/spell-form'\nimport { formModes } from '../../utils'\n\nconst CreateBreadcrumb = () => (\n  <Breadcrumbs>\n    <Link\n      color=\"inherit\"\n      textDecoration=\"none\"\n      onClick={() => navigate('../spells')}\n    >\n      Spells\n    </Link>\n    <Link color=\"inherit\" textDecoration=\"none\">\n      Create\n    </Link>\n  </Breadcrumbs>\n)\n\nexport const CreateSpellPage = () => (\n  <VFlow vSpacing={1.5} style={{ maxWidth: '800px' }}>\n    <CreateBreadcrumb />\n\n    <SpellIntroduction />\n\n    <SpellForm mode={formModes.CREATE} />\n  </VFlow>\n)\n\nexport default CreateSpellPage\n","import { connect } from 'react-redux'\nimport { selectSpellByName } from '../../redux/spells/selectors'\n\nconst mapStateToProps = (state, props) => ({\n  spell: selectSpellByName(state, props)\n})\n\nexport default connect(mapStateToProps)\n","import * as R from 'ramda'\nimport React, { Fragment } from 'react'\nimport { navigate } from '@reach/router'\nimport { Breadcrumbs, Link, Text, VFlow } from 'bold-ui'\n\nimport SpellForm from '../../components/spell-form'\nimport { SpellIntroduction } from '../../components/spell-form/component'\n\nimport connect from './connect'\nimport { formModes } from '../../utils'\n\nconst EditBreadcrumb = ({ spellName }) => (\n  <Breadcrumbs>\n    <Link\n      color=\"inherit\"\n      textDecoration=\"none\"\n      onClick={() => navigate('../../spells')}\n    >\n      Spells\n    </Link>\n    <Link color=\"inherit\" textDecoration=\"none\">\n      Edit {spellName}\n    </Link>\n  </Breadcrumbs>\n)\n\nconst EditSpellPage = ({ spellName, spell }) => (\n  <VFlow vSpacing={1.5} style={{ maxWidth: '800px' }}>\n    <EditBreadcrumb spellName={spellName} />\n    {!R.isEmpty(spell) && (\n      <Fragment>\n        <SpellIntroduction />\n        <SpellForm mode={formModes.EDIT} spell={spell} />\n      </Fragment>\n    )}\n    {R.isEmpty(spell) && (\n      <Fragment>\n        <Text component=\"p\" fontSize={1}>\n          There is no spell with that name.\n        </Text>\n        <Text component=\"p\" fontSize={1}>\n          <Link onClick={() => navigate('../../spells')}>Go back</Link>\n        </Text>\n      </Fragment>\n    )}\n  </VFlow>\n)\n\nexport default connect(EditSpellPage)\n","import { connect } from 'react-redux'\nimport { importSpells } from '../../redux/spells'\n\nconst actionCreators = {\n  importSpells\n}\n\nexport default connect(null, actionCreators)\n","import connect from './connect'\nimport ImportPage from './component'\n\nexport default connect(ImportPage)\n","import * as R from 'ramda'\nimport React from 'react'\nimport ReactJson from 'react-json-view'\nimport { navigate } from '@reach/router'\nimport { Alert, Breadcrumbs, Button, Link, Text, VFlow } from 'bold-ui'\n\nimport { SPELL_ATTRIBUTES } from '../../spell-utils'\nimport { redirectClipboardTo } from '../../clipboard'\n\nconst ImportPage = ({ location, importSpells }) => {\n  const { invalidJson, data } = R.pathOr({}, ['state'], location)\n  const isDataEmpty = R.isEmpty(data) || R.isNil(data)\n  const normalizedData = R.is(Array, data) ? data : [data]\n\n  const importSpellData = R.pipe(\n    R.map(R.pick(SPELL_ATTRIBUTES)),\n    R.indexBy(R.prop('name'))\n  )\n\n  const isValidJson = !isDataEmpty && !invalidJson\n  return (\n    <VFlow\n      vSpacing={1}\n      style={{ maxWidth: '800px' }}\n      onPaste={redirectClipboardTo('import')}\n    >\n      <Breadcrumbs>\n        <Link\n          color=\"inherit\"\n          textDecoration=\"none\"\n          onClick={() => navigate('../spells')}\n        >\n          Spells\n        </Link>\n        <Link color=\"inherit\" textDecoration=\"none\">\n          Import\n        </Link>\n      </Breadcrumbs>\n\n      <Text component=\"p\" fontSize={1}>\n        Imported values that have the same name as a SRD content will be\n        ignored. Values that have the same name as a homebrew content will be\n        overriden.\n      </Text>\n\n      {!invalidJson && isDataEmpty && (\n        <Alert type=\"warning\">\n          The imported value is empty.{' '}\n          <Link onClick={() => navigate('../spells')}>Go back</Link>\n        </Alert>\n      )}\n      {invalidJson && (\n        <Alert type=\"danger\">\n          The imported value is not a valid JSON content.{' '}\n          <Link onClick={() => navigate('../spells')}>Go back</Link>\n        </Alert>\n      )}\n      {isValidJson && (\n        <Button\n          kind=\"primary\"\n          skin=\"default\"\n          size=\"medium\"\n          onClick={() => {\n            importSpells(importSpellData(normalizedData))\n            navigate('../spells')\n          }}\n        >\n          Import {normalizedData.length} element\n          {normalizedData.length > 1 && 's'}\n        </Button>\n      )}\n      {isValidJson && (\n        <ReactJson\n          src={normalizedData}\n          name={false}\n          displayDataTypes={false}\n          displayObjectSize={true}\n          enableClipboard={false}\n          iconStyle=\"square\"\n          indentWidth={2}\n          theme=\"grayscale:inverted\"\n          shouldCollapse={() => false}\n        />\n      )}\n      {isValidJson && (\n        <Button\n          kind=\"primary\"\n          skin=\"default\"\n          size=\"medium\"\n          onClick={() => {\n            importSpells(importSpellData(normalizedData))\n            navigate('../spells')\n          }}\n        >\n          Import {normalizedData.length} element\n          {normalizedData.length > 1 && 's'}\n        </Button>\n      )}\n    </VFlow>\n  )\n}\n\nexport default ImportPage\n","import React, { Fragment } from 'react'\nimport { Router } from '@reach/router'\n\nimport Layout from './components/layout'\nimport Home from './pages/Home'\nimport SpellListPage from './pages/spell-list'\nimport CreateSpellPage from './pages/create-spell'\nimport EditSpellPage from './pages/edit-spell'\nimport ImportPage from './pages/import'\n\nimport { Alert } from 'bold-ui'\nimport { useOfflineDataRestoration } from './redux/offline'\n\nconst App = () => {\n  const { hasDataLoaded, loadErrored } = useOfflineDataRestoration()\n  return (\n    <Fragment>\n      {loadErrored && <Alert type=\"warning\">Local data failed to load.</Alert>}\n      {hasDataLoaded && (\n        <Router>\n          <Home path=\"/\" />\n          <Layout path=\"spells\">\n            <SpellListPage path=\"/\" />\n            <CreateSpellPage path=\"create\" />\n            <EditSpellPage path=\"edit/:spellName\" />\n            <ImportPage path=\"import\" />\n          </Layout>\n        </Router>\n      )}\n    </Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'bold-ui'\n\nimport store from './redux'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}